
# First, we use the ccmp feature (which is processed first by shaping)
# engines to decompose the dots. We provide a number of empty glyphs
# mapped to certain Unicode codepoints; for example, dad-ar is mapped
# to U+0636, but we never plan to use that glyph, but rather immediately
# turn it into its component parts: SADu1 and a dot above.
#
# Note that at this stage there are certain glyphs (e.g. JIM) which will
# have different dot patterns based on their position. We will fix that
# up in the relevant position-shaping feature.
Feature ccmp {
  Routine ccmp1 {
    Substitute beh-ar -> BEu1 sdb;
    Substitute beeh-ar -> BEu1 ddvb;
    Substitute lamTahabove-ar -> LAMu1 toeda;
    Substitute teh-ar -> TEu1 dda;
    Substitute theh-ar -> TEu1 tda;
    Substitute dad-ar -> SADu1 sda;
    Substitute thal-ar -> DALu1 sda;
    Substitute zain-ar -> REu1 sda;
    Substitute sheen-ar -> SINu1 tda;
    Substitute ghain-ar -> AINu1 sda;
    Substitute feh-ar -> FEu1 sda;
    Substitute qaf-ar -> QAFu1 dda;
    Substitute peh-ar -> TEu1 tdb;
    Substitute rreh-ar -> REu1 toeda;
    Substitute tteh-ar -> TEu1 toeda;
    Substitute zah-ar -> TOEu1 sda;
    Substitute ddal-ar -> DALu1 toeda;
    Substitute jim-ar -> JIMu1;
    Substitute jeh-ar -> REu1 tda;
    Substitute kaf-ar -> KAFu1;
    Substitute ng-ar -> KAFu1 tda.ng;
    Substitute kafswash-ar -> KAFu1;
    Substitute alefMaksura-ar -> CH_YEu1;
    Substitute wawHamzaabove-ar -> VAOu1 HAMZA_ABOVE;
    Substitute alefMadda-ar -> ALIFu1 MADDA;
    Substitute alefHamzaabove-ar -> ALIFu1 HAMZA_ABOVE;
    Substitute alefHamzabelow-ar -> ALIFu1 HAMZA_BELOW;
    Substitute alefWasla-ar -> ALIFu1 HAMZA_WASL;
    Substitute hehgoalHamzaabove-ar -> HAYCu1 HAMZA_ABOVE;
    Substitute u-ar -> VAOu1 DAMMA;
    Substitute ve-ar -> VAOu1 tda;
    Substitute dalTwodotsverticalbelowTah-ar -> DALu1 ddvb toeda;
    Substitute gueh-ar -> GAFu1 ddvb;
    Substitute yehbarreeHamzaabove-ar -> BARI_YEu1 HAMZA_ABOVE;
    Substitute lamBar-ar -> LAMu1 LAM_BAR;
    Substitute lamDoublebar-ar -> LAMu1 LAM_BAR LAM_BAR;
    };

  Routine MarkLigatures {
    Substitute SHADDA DAMMA -> SHADDA_DAMMA;
    Substitute SHADDA DAMMA -> SHADDA_DAMMA;
    Substitute SHADDA FATHA -> SHADDA_FATHA;
    Substitute SHADDA LONG_A -> SHADDA_LONG_A;
    Substitute HAMZA_ABOVE DAMMA -> HAMZA_DAMMA;
    Substitute HAMZA_ABOVE sukun-ar -> SUKUN_HAMZA;
    Substitute HAMZA_ABOVE FATHA -> HAMZA_FATHA;
    Substitute HAMZA_BELOW KASRA -> HAMZA_KASRA;
  };
};

# In the fina feature, we want to achieve three things:
#  1) Select normal final forms (e.g. substitute DALu1 with DALf1)
#  2) Perform exceptions which select alternative final forms
#  3) Fix up position-specific dots for JIM and its friends, which we punted
#     on in the previous feature.
Feature fina {

  Routine yehfina {
      Substitute yeh-ar -> CH_YEu1 ddb;
  };


  # Now we fix up the JIM-likes.
  Routine FinaJimlike {
    Substitute tcheh-ar -> JIMf1 tdi;
    Substitute khah-ar -> JIMf1 sda;
    Substitute hah-ar -> JIMf1;
    Substitute JIMu1 -> JIMf1 sdi;
    Substitute dyeh-ar -> JIMf1 ddvi;

    Substitute noon-ar -> NUNf1 sdi;
    Substitute noonTahabove-ar -> NUNf1 sda toeda;

    # Yeh hamza is different, because it can take CH_YE form but no dots.
    Substitute yehHamzaabove-ar -> CH_YEf1 HAMZA_ABOVE;

    # Teh Marbuta Goal
    Substitute heh-ar -> HAYCf1;
    Substitute tehMarbutagoal-ar -> HAYCf1 dda;
    Substitute tehMarbuta-ar -> HAYCf1 dda;
    Substitute ae-ar -> HAYCf1;
  };

  # Because I'm lazy, SuffixingSubstitute is a custom plugin which creates
  # a substitution by filing off the last two characters of all the
  # glyph names in a class, and appending the two characters on the
  # right-side of the arrow. # i.e `SuffixingSubstitute [AINu1] -> f1`
  # creates the substitution AINu1 -> AINf1
  LoadPlugin karakul.SuffixingSubstitute;

  Routine SuffixingSubstitutes {
    SuffixingSubstitute [
      AINu1 ALIFu1 BARI_YEu1 BEu1 CH_YEu1 DALu1 FEu1 GAFu1 HAYAu1
      HAYCu1 KAFu1 LAMu1 MIMu1 NUNu1 QAFu1 REu1 SADu1 SINu1 TOEu1
      VAOu1 TEu1 LAM_ALIFu1
    ] -> f1;
  };
};

# Nothing much special about the init feature, except that some glyphs
# take the forms of other rasm glyphs (e.g. QAF looks like a FE with no dot)
# in initial position, so we turn them into that. Also fix up JIM again.
Feature init {
  Routine init1 {
  Substitute noon-ar -> BEi1 sda;
  Substitute noonTahabove-ar -> BEi1 sda toeda;
  Substitute NUNu1 -> BEi1; # Noon ghunna has no dots
  Substitute CH_YEu1 -> TEi1 ddb;
  Substitute yeh-ar -> TEi1 ddb;
  Substitute QAFu1 -> FEi1;
  Substitute JIMu1    -> JIMi1 sdb;
  Substitute dyeh-ar -> JIMi1 ddvb;
  Substitute HAYCu1    -> HAYCi1 haydb;
  Substitute heh-ar -> Hei1;
  Substitute hah-ar -> JIMi1;
  Substitute tcheh-ar -> JIMi1 tdb;
  Substitute khah-ar -> JIMi1 sda;
  Substitute yehHamzaabove-ar -> TEi1 HAMZA_ABOVE;
  Substitute tehMarbutagoal-ar -> HAYCu1 tda;
  Substitute tehMarbuta-ar -> HAYCu1 dda;

  SuffixingSubstitute [
    AINu1 BEu1 FEu1 GAFu1 HAYAu1 KAFu1 LAMu1 MIMu1 SADu1 SINu1 TOEu1 TEu1
  ] -> i1;
  };
};

# medi is similar, except that (1) the Qalmi patent says that a penultimate
# BE between SIN and final BE should be an exception, (2) Right-joiners take
# final forms in medial position.
Feature medi {
  Routine medi1 {
    SuffixingSubstitute [
      AINu1 BEu1 FEu1 GAFu1 HAYAu1 KAFu1 LAMu1 MIMu1 SADu1 SINu1 TOEu1
      TEu1
    ] -> m1;
    SuffixingSubstitute [DALu1 REu1] -> f1;

    Substitute QAFu1    -> FEm1;
    Substitute noon-ar  -> BEm1 sda;
    Substitute noonTahabove-ar -> BEm1 sda toeda;
    Substitute NUNu1    -> BEm1; # Noon ghunna
    Substitute JIMu1    -> JIMm1 sdb;
    Substitute dyeh-ar  -> JIMm1 ddvb;
    Substitute tcheh-ar -> JIMm1 tdb;
    Substitute khah-ar  -> JIMm1 sda;
    Substitute CH_YEu1  -> TEm1 ddb;
    Substitute yeh-ar -> TEm1 ddb;
    Substitute hah-ar -> JIMm1;
    Substitute HAYCu1   -> HAYCm1 haydb;
    Substitute heh-ar -> HAYCm1;
    Substitute tehMarbutagoal-ar -> HAYCf1 dda;
    Substitute tehMarbuta-ar -> HAYCf1 dda;
    Substitute yehHamzaabove-ar -> TEm1 HAMZA_ABOVE;
  };
};

Feature isol {
  Routine isol1 {
    Substitute yehHamzaabove-ar -> CH_YEu1 HAMZA_ABOVE;
    Substitute tehMarbutagoal-ar -> HAYCu1 dda;
    Substitute tehMarbuta-ar -> HAYCu1 dda;
    Substitute hah-ar -> JIMu1;
    Substitute noon-ar -> NUNu1 sdi;
    Substitute noonTahabove-ar -> NUNu1 sda toeda;
    Substitute JIMu1 -> JIMu1 sdi;
    Substitute yeh-ar -> CH_YEu1 ddb;
  };
};
